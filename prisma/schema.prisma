// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model Merchant {
  merchant_id      String    @id
  merchant_name    String
  merchant_email   String
  merchant_phone   String
  merchant_address String
  merchant_website String
  merchant_logo    String
  redirect_url     String
  is_active        Boolean
  created_at       DateTime  @default(now())
  updated_at       DateTime
  created_by       String
  updated_by       String
  accounts         Account[]

  @@map("merchants")
}

model Wallet {
  wallet_id      String    @id
  wallet_name    String
  wallet_balance Float
  is_active      Boolean
  created_at     DateTime  @default(now())
  updated_at     DateTime
  created_by     String
  updated_by     String
  accounts       Account[]

  @@map("wallets")
}

model Account {
  account_id   String        @id
  account_name String
  account_type String
  is_active    Boolean
  created_at   DateTime      @default(now())
  updated_at   DateTime
  created_by   String
  updated_by   String
  transactions Transaction[]
  merchant     Merchant      @relation(fields: [merchant_id], references: [merchant_id])
  merchant_id  String
  wallet       Wallet        @relation(fields: [wallet_id], references: [wallet_id])
  wallet_id    String

  @@map("accounts")
}

model Transaction {
  transaction_id     String   @id
  transaction_type   String // credit, debit, transfer, qris
  transaction_date   DateTime
  transaction_amount Float
  transaction_status String // pending, success, failed
  transaction_note   String?
  user_id            String
  is_active          Boolean
  created_at         DateTime @default(now())
  updated_at         DateTime
  created_by         String
  updated_by         String
  account            Account  @relation(fields: [account_id], references: [account_id])
  account_id         String
  Auth               Auth     @relation(fields: [client_id], references: [client_id])
  client_id          String

  @@map("transactions")
}

model Auth {
  client_id     String        @id
  client_secret String
  apps_name     String
  is_active     Boolean
  created_at    DateTime      @default(now())
  updated_at    DateTime
  created_by    String
  updated_by    String
  transactions  Transaction[]

  @@map("auths")
}
